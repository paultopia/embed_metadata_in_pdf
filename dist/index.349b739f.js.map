{"mappings":"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","sources":["<anon>","node_modules/@parcel/runtime-js/lib/helpers/bundle-manifest.js","node_modules/@parcel/runtime-js/lib/runtime-91cba5abf0a6bf65.js","js/core_code.js","node_modules/@parcel/runtime-js/lib/runtime-47bb275deb8d0fc1.js","node_modules/@parcel/runtime-js/lib/helpers/get-worker-url.js"],"sourcesContent":["\nfunction $parcel$export(e, n, v, s) {\n  Object.defineProperty(e, n, {get: v, set: s, enumerable: true, configurable: true});\n}\n\n      var $parcel$global = globalThis;\n    \nvar $parcel$modules = {};\nvar $parcel$inits = {};\n\nvar parcelRequire = $parcel$global[\"parcelRequire11d9\"];\n\nif (parcelRequire == null) {\n  parcelRequire = function(id) {\n    if (id in $parcel$modules) {\n      return $parcel$modules[id].exports;\n    }\n    if (id in $parcel$inits) {\n      var init = $parcel$inits[id];\n      delete $parcel$inits[id];\n      var module = {id: id, exports: {}};\n      $parcel$modules[id] = module;\n      init.call(module.exports, module, module.exports);\n      return module.exports;\n    }\n    var err = new Error(\"Cannot find module '\" + id + \"'\");\n    err.code = 'MODULE_NOT_FOUND';\n    throw err;\n  };\n\n  parcelRequire.register = function register(id, init) {\n    $parcel$inits[id] = init;\n  };\n\n  $parcel$global[\"parcelRequire11d9\"] = parcelRequire;\n}\n\nvar parcelRegister = parcelRequire.register;\nparcelRegister(\"27Lyk\", function(module, exports) {\n\n$parcel$export(module.exports, \"register\", () => $18c11f3350a906ea$export$6503ec6e8aabbaf, (v) => $18c11f3350a906ea$export$6503ec6e8aabbaf = v);\nvar $18c11f3350a906ea$export$6503ec6e8aabbaf;\nvar $18c11f3350a906ea$export$f7ad0328861e2f03;\n\"use strict\";\nvar $18c11f3350a906ea$var$mapping = new Map();\nfunction $18c11f3350a906ea$var$register(baseUrl, manifest) {\n    for(var i = 0; i < manifest.length - 1; i += 2)$18c11f3350a906ea$var$mapping.set(manifest[i], {\n        baseUrl: baseUrl,\n        path: manifest[i + 1]\n    });\n}\nfunction $18c11f3350a906ea$var$resolve(id) {\n    var resolved = $18c11f3350a906ea$var$mapping.get(id);\n    if (resolved == null) throw new Error(\"Could not resolve bundle with id \" + id);\n    return new URL(resolved.path, resolved.baseUrl).toString();\n}\n$18c11f3350a906ea$export$6503ec6e8aabbaf = $18c11f3350a906ea$var$register;\n$18c11f3350a906ea$export$f7ad0328861e2f03 = $18c11f3350a906ea$var$resolve;\n\n});\n\nvar $f8608169bc11b40a$exports = {};\n\n(parcelRequire(\"27Lyk\")).register(new URL(\"\", import.meta.url).toString(), JSON.parse('[\"1TzJS\",\"index.349b739f.js\",\"7YU74\",\"pdf_worker.040d6cdf.js\"]'));\n\n\n// swiped from coherentpdf example code\nfunction $8395381ed5e5a6ad$var$filedownload(data, filename, mime, bom) {\n    var blobData = typeof bom !== \"undefined\" ? [\n        bom,\n        data\n    ] : [\n        data\n    ];\n    var blob = new Blob(blobData, {\n        type: mime || \"application/octet-stream\"\n    });\n    if (typeof window.navigator.msSaveBlob !== \"undefined\") window.navigator.msSaveBlob(blob, filename);\n    else {\n        var blobURL = window.URL && window.URL.createObjectURL ? window.URL.createObjectURL(blob) : window.webkitURL.createObjectURL(blob);\n        var tempLink = document.createElement(\"a\");\n        tempLink.style.display = \"none\";\n        tempLink.href = blobURL;\n        tempLink.setAttribute(\"download\", filename);\n        if (typeof tempLink.download === \"undefined\") tempLink.setAttribute(\"target\", \"_blank\");\n        document.body.appendChild(tempLink);\n        tempLink.click();\n        setTimeout(function() {\n            document.body.removeChild(tempLink);\n            window.URL.revokeObjectURL(blobURL);\n        }, 200);\n    }\n}\n// checking code also adapted from coherentpdf\n// there's probably a better way to do this than duplicating code, but I'm not sure if I can pass in symbols that may not be set so fuckit.\nfunction $8395381ed5e5a6ad$var$ensureEmbedDataIsSet(timeout) {\n    var start = Date.now();\n    return new Promise(waitForEmbedData);\n    function waitForEmbedData(resolve, reject) {\n        if ($8395381ed5e5a6ad$var$embedState && $8395381ed5e5a6ad$var$embedState.complete) resolve($8395381ed5e5a6ad$var$embedState);\n        else if (timeout && Date.now() - start >= timeout) reject(new Error(\"timeout\"));\n        else setTimeout(waitForEmbedData.bind(this, resolve, reject), 30);\n    }\n}\nfunction $8395381ed5e5a6ad$var$ensureExtractDataIsSet(timeout) {\n    var start = Date.now();\n    return new Promise(waitForExtractData);\n    function waitForExtractData(resolve, reject) {\n        if ($8395381ed5e5a6ad$var$extractState && $8395381ed5e5a6ad$var$extractState.complete) resolve($8395381ed5e5a6ad$var$extractState);\n        else if (timeout && Date.now() - start >= timeout) reject(new Error(\"timeout\"));\n        else setTimeout(waitForExtractData.bind(this, resolve, reject), 30);\n    }\n}\nvar $aeb6eb219f734731$exports = {};\nvar $56b621a6dd25b2cb$exports = {};\n\"use strict\";\n$56b621a6dd25b2cb$exports = function(workerUrl, origin, isESM) {\n    if (origin === self.location.origin) // If the worker bundle's url is on the same origin as the document,\n    // use the worker bundle's own url.\n    return workerUrl;\n    else {\n        // Otherwise, create a blob URL which loads the worker bundle with `importScripts`.\n        var source = isESM ? \"import \" + JSON.stringify(workerUrl) + \";\" : \"importScripts(\" + JSON.stringify(workerUrl) + \");\";\n        return URL.createObjectURL(new Blob([\n            source\n        ], {\n            type: \"application/javascript\"\n        }));\n    }\n};\n\n\nlet $aeb6eb219f734731$var$url = new URL(\"pdf_worker.040d6cdf.js\", import.meta.url);\n$aeb6eb219f734731$exports = $56b621a6dd25b2cb$exports($aeb6eb219f734731$var$url.toString(), $aeb6eb219f734731$var$url.origin, true);\n\n\n// Functionality to delegate to workers for appropriate tasks.  Again swiped from coherent PDF example, but for some bizarre reason the coherent PDF people had this just running as opposed to being wrapped in a function, which seems wasteful...\nfunction $8395381ed5e5a6ad$var$embedDataInPDf() {\n    $8395381ed5e5a6ad$var$ensureEmbedDataIsSet(100000).then(function() {\n        document.getElementById(\"progress\").innerHTML = \"PDF File loaded from disc. Processing...\";\n        var arr = new Uint8Array($8395381ed5e5a6ad$var$embedState.pdf);\n        var pdfName = $8395381ed5e5a6ad$var$embedState.pdfFileName;\n        var modifiedPdfName = `modified-${pdfName}`;\n        var w = new Worker($aeb6eb219f734731$exports);\n        w.postMessage({\n            mtype: \"embed\",\n            bytes: arr,\n            citations: $8395381ed5e5a6ad$var$embedState.cites,\n            citesFileName: $8395381ed5e5a6ad$var$embedState.citesFileName\n        });\n        w.onmessage = function(e) {\n            switch(e.data.mtype){\n                case \"pdfout\":\n                    $8395381ed5e5a6ad$var$filedownload(e.data.bytes, modifiedPdfName);\n                    document.getElementById(\"progress\").innerHTML = \"Processing finished. Output PDF file downloaded. Reload page to do another file.\";\n                    w.terminate();\n                    break;\n                case \"progress\":\n                    document.getElementById(\"progress\").innerHTML = e.data.message;\n                    break;\n            }\n        };\n    });\n}\n\nfunction $8395381ed5e5a6ad$var$extractDataFromPDf() {\n    $8395381ed5e5a6ad$var$ensureExtractDataIsSet(100000).then(function() {\n        document.getElementById(\"progress\").innerHTML = \"PDF File loaded from disc. Processing...\";\n        var arr = new Uint8Array($8395381ed5e5a6ad$var$extractState.pdf);\n        var w = new Worker($aeb6eb219f734731$exports);\n        w.postMessage({\n            mtype: \"extract\",\n            bytes: arr\n        });\n        w.onmessage = function(e) {\n            switch(e.data.mtype){\n                case \"dataExtracted\":\n                    $8395381ed5e5a6ad$var$filedownload(e.data.citations, e.data.fileName, \"text/plain\");\n                    document.getElementById(\"progress\").innerHTML = \"Processing finished. Citaton data file downloaded. Reload page to do another file.\";\n                    w.terminate();\n                    break;\n                case \"progress\":\n                    document.getElementById(\"progress\").innerHTML = e.data.message;\n                    break;\n            }\n        };\n    });\n}\n// Setting global state and event listeners (mostly adapted from coherentpdf example)\n// Global state for embedding and extracting\nvar $8395381ed5e5a6ad$var$embedState = function() {};\nvar $8395381ed5e5a6ad$var$extractState = function() {};\n// hang event listener for citation file upload\nconst $8395381ed5e5a6ad$var$citesSelector = document.getElementById(\"citation-selector\");\n$8395381ed5e5a6ad$var$citesSelector.addEventListener(\"change\", (event)=>{\n    const citesFileList = event.target.files;\n    const citesFileName = citesFileList[0].name;\n    const citesReader = new FileReader();\n    citesReader.addEventListener(\"load\", (event)=>{\n        var citesString = event.target.result;\n        $8395381ed5e5a6ad$var$embedState.cites = citesString;\n        $8395381ed5e5a6ad$var$embedState.citesFileName = citesFileName;\n        if ($8395381ed5e5a6ad$var$embedState.pdf) {\n            $8395381ed5e5a6ad$var$embedState.complete = true;\n            $8395381ed5e5a6ad$var$embedDataInPDf();\n        }\n    });\n    citesReader.readAsText(citesFileList[0], \"UTF-8\");\n});\n// hang event listener for embedding PDF file upload\nconst $8395381ed5e5a6ad$var$embedSelector = document.getElementById(\"embed-selector\");\n$8395381ed5e5a6ad$var$embedSelector.addEventListener(\"change\", (event)=>{\n    const embedList = event.target.files;\n    const embedName = embedList[0].name;\n    const embedReader = new FileReader();\n    embedReader.addEventListener(\"load\", (event)=>{\n        const embedResult = event.target.result;\n        $8395381ed5e5a6ad$var$embedState.pdf = embedResult;\n        $8395381ed5e5a6ad$var$embedState.pdfFileName = embedName;\n        if ($8395381ed5e5a6ad$var$embedState.cites) {\n            $8395381ed5e5a6ad$var$embedState.complete = true;\n            $8395381ed5e5a6ad$var$embedDataInPDf();\n        }\n    });\n    embedReader.readAsArrayBuffer(embedList[0]);\n});\n// hang event listener for extraction PDF file upload\nconst $8395381ed5e5a6ad$var$extractSelector = document.getElementById(\"extract-selector\");\n$8395381ed5e5a6ad$var$extractSelector.addEventListener(\"change\", (event)=>{\n    const extractList = event.target.files;\n    const extractReader = new FileReader();\n    extractReader.addEventListener(\"load\", (event)=>{\n        const extractResult = event.target.result;\n        $8395381ed5e5a6ad$var$extractState.pdf = extractResult;\n        $8395381ed5e5a6ad$var$extractState.complete = true;\n        $8395381ed5e5a6ad$var$extractDataFromPDf();\n    });\n    extractReader.readAsArrayBuffer(extractList[0]);\n});\n\n\n//# sourceMappingURL=index.349b739f.js.map\n","\"use strict\";\n\nvar mapping = new Map();\nfunction register(baseUrl, manifest) {\n  for (var i = 0; i < manifest.length - 1; i += 2) {\n    mapping.set(manifest[i], {\n      baseUrl: baseUrl,\n      path: manifest[i + 1]\n    });\n  }\n}\nfunction resolve(id) {\n  var resolved = mapping.get(id);\n  if (resolved == null) {\n    throw new Error('Could not resolve bundle with id ' + id);\n  }\n  return new URL(resolved.path, resolved.baseUrl).toString();\n}\nmodule.exports.register = register;\nmodule.exports.resolve = resolve;","require('./helpers/bundle-manifest').register(new __parcel__URL__(\"\").toString(),JSON.parse(\"[\\\"1TzJS\\\",\\\"index.349b739f.js\\\",\\\"7YU74\\\",\\\"pdf_worker.040d6cdf.js\\\"]\"));","import { Base64 } from 'js-base64';\n\n\n// swiped from coherentpdf example code\nfunction filedownload(data, filename, mime, bom) {\n    var blobData = (typeof bom !== 'undefined') ? [bom, data] : [data]\n    var blob = new Blob(blobData, {type: mime || 'application/octet-stream'});\n    if (typeof window.navigator.msSaveBlob !== 'undefined') {\n        window.navigator.msSaveBlob(blob, filename);\n    }\n    else {\n        var blobURL = (window.URL && window.URL.createObjectURL) ? window.URL.createObjectURL(blob) : window.webkitURL.createObjectURL(blob);\n        var tempLink = document.createElement('a');\n        tempLink.style.display = 'none';\n        tempLink.href = blobURL;\n        tempLink.setAttribute('download', filename);\n\t\n        if (typeof tempLink.download === 'undefined') {\n            tempLink.setAttribute('target', '_blank');\n        }\n\t\n        document.body.appendChild(tempLink);\n        tempLink.click();\n\n        setTimeout(function() {\n            document.body.removeChild(tempLink);\n            window.URL.revokeObjectURL(blobURL);\n        }, 200)\n    }\n}\n\n// checking code also adapted from coherentpdf\n// there's probably a better way to do this than duplicating code, but I'm not sure if I can pass in symbols that may not be set so fuckit.\nfunction ensureEmbedDataIsSet(timeout) {\n    var start = Date.now();\n    return new Promise(waitForEmbedData);\n \n    function waitForEmbedData(resolve, reject) {\n        if (embedState && embedState.complete)\n            resolve(embedState);\n        else if (timeout && (Date.now() - start) >= timeout)\n            reject(new Error(\"timeout\"));\n        else\n            setTimeout(waitForEmbedData.bind(this, resolve, reject), 30);\n    }\n}\n\nfunction ensureExtractDataIsSet(timeout) {\n    var start = Date.now();\n    return new Promise(waitForExtractData);\n \n    function waitForExtractData(resolve, reject) {\n        if (extractState && extractState.complete)\n            resolve(extractState);\n        else if (timeout && (Date.now() - start) >= timeout)\n            reject(new Error(\"timeout\"));\n        else\n            setTimeout(waitForExtractData.bind(this, resolve, reject), 30);\n    }\n}\n\n// Functionality to delegate to workers for appropriate tasks.  Again swiped from coherent PDF example, but for some bizarre reason the coherent PDF people had this just running as opposed to being wrapped in a function, which seems wasteful...\n\nfunction embedDataInPDf(){\n    ensureEmbedDataIsSet(100000).then(function(){\n\tdocument.getElementById(\"progress\").innerHTML = 'PDF File loaded from disc. Processing...';\n\tvar arr = new Uint8Array(embedState.pdf);\n\tvar pdfName = embedState.pdfFileName;\n\tvar modifiedPdfName = `modified-${pdfName}`;\n\tvar w = new Worker(new URL(\"pdf_worker.js\", import.meta.url), {type: 'module'})\n\tw.postMessage({mtype: 'embed', bytes: arr, citations: embedState.cites, citesFileName: embedState.citesFileName});\n\tw.onmessage = function(e)\n\t{\n\t    switch (e.data.mtype)\n\t    {\n\t\tcase 'pdfout':\n\t\t  filedownload(e.data.bytes, modifiedPdfName);\n\t\t  document.getElementById(\"progress\").innerHTML = 'Processing finished. Output PDF file downloaded. Reload page to do another file.';\n\t\t  w.terminate();\n\t\tbreak;\n\t\tcase 'progress':\n\t\t  document.getElementById(\"progress\").innerHTML = e.data.message;\n\t\tbreak;\n\t    }\n\t}\n    });\n}\n\nfunction extractDataFromPDf(){\n    ensureExtractDataIsSet(100000).then(function(){\n\tdocument.getElementById(\"progress\").innerHTML = 'PDF File loaded from disc. Processing...';\n\tvar arr = new Uint8Array(extractState.pdf);\n\tvar w = new Worker(new URL(\"pdf_worker.js\", import.meta.url), {type: 'module'})\n\tw.postMessage({mtype: 'extract', bytes: arr});\n\tw.onmessage = function(e)\n\t{\n\t    switch (e.data.mtype)\n\t    {\n\t\tcase 'dataExtracted':\n\t\t  filedownload(e.data.citations, e.data.fileName, \"text/plain\");\n\t\t  document.getElementById(\"progress\").innerHTML = 'Processing finished. Citaton data file downloaded. Reload page to do another file.';\n\t\t  w.terminate();\n\t\tbreak;\n\t\tcase 'progress':\n\t\t  document.getElementById(\"progress\").innerHTML = e.data.message;\n\t\tbreak;\n\t    }\n\t}\n    });\n}\n\n\n\n// Setting global state and event listeners (mostly adapted from coherentpdf example)\n\n// Global state for embedding and extracting\nvar embedState = function() {};\n\nvar extractState = function() {};\n\n// hang event listener for citation file upload\n\nconst citesSelector = document.getElementById('citation-selector');\ncitesSelector.addEventListener('change', (event) => {\n    const citesFileList = event.target.files;\n    const citesFileName = citesFileList[0].name;\n    const citesReader = new FileReader();\n    citesReader.addEventListener('load', (event) => {\n        var citesString = event.target.result;\n\tembedState.cites = citesString;\n\tembedState.citesFileName = citesFileName;\n\tif (embedState.pdf){\n\t    embedState.complete = true;\n\t    embedDataInPDf();\n\t}\n    });\n    citesReader.readAsText(citesFileList[0], \"UTF-8\");\n});\n\n// hang event listener for embedding PDF file upload\n\nconst embedSelector = document.getElementById('embed-selector');\nembedSelector.addEventListener('change', (event) => {\n    const embedList = event.target.files;\n    const embedName = embedList[0].name;\n    const embedReader = new FileReader();\n    embedReader.addEventListener('load', (event) => {\n        const embedResult = event.target.result;\n        embedState.pdf = embedResult;\n\tembedState.pdfFileName = embedName;\n\tif (embedState.cites){\n\t    embedState.complete = true;\n\t    embedDataInPDf();\n\t}\n    });\n    embedReader.readAsArrayBuffer(embedList[0]);\n});\n\n// hang event listener for extraction PDF file upload\n\nconst extractSelector = document.getElementById('extract-selector');\nextractSelector.addEventListener('change', (event) => {\n    const extractList = event.target.files;\n    const extractReader = new FileReader();\n    extractReader.addEventListener('load', (event) => {\n        const extractResult = event.target.result;\n        extractState.pdf = extractResult;\n\textractState.complete = true;\n\textractDataFromPDf()\n    });\n    extractReader.readAsArrayBuffer(extractList[0]);\n});\n\n","let workerURL = require('./helpers/get-worker-url');\nlet url = new __parcel__URL__(\"pdf_worker.040d6cdf.js\");\nmodule.exports = workerURL(url.toString(), url.origin, true);","\"use strict\";\n\nmodule.exports = function (workerUrl, origin, isESM) {\n  if (origin === self.location.origin) {\n    // If the worker bundle's url is on the same origin as the document,\n    // use the worker bundle's own url.\n    return workerUrl;\n  } else {\n    // Otherwise, create a blob URL which loads the worker bundle with `importScripts`.\n    var source = isESM ? 'import ' + JSON.stringify(workerUrl) + ';' : 'importScripts(' + JSON.stringify(workerUrl) + ');';\n    return URL.createObjectURL(new Blob([source], {\n      type: 'application/javascript'\n    }));\n  }\n};"],"names":["$parcel$global","globalThis","$parcel$modules","$parcel$inits","parcelRequire","$8395381ed5e5a6ad$var$filedownload","data","filename","mime","bom","blob","Blob","type","window","navigator","msSaveBlob","blobURL","URL","createObjectURL","webkitURL","tempLink","document","createElement","style","display","href","setAttribute","download","body","appendChild","click","setTimeout","removeChild","revokeObjectURL","id","exports","init","module","call","err","Error","code","register","parcelRegister","Object","defineProperty","get","$18c11f3350a906ea$export$6503ec6e8aabbaf","set","v","enumerable","configurable","$18c11f3350a906ea$var$mapping","Map","baseUrl","manifest","i","length","path","url","toString","JSON","parse","$aeb6eb219f734731$exports","$56b621a6dd25b2cb$exports","workerUrl","origin","isESM","self","location","source","stringify","$aeb6eb219f734731$var$url","$8395381ed5e5a6ad$var$embedDataInPDf","start","$8395381ed5e5a6ad$var$ensureEmbedDataIsSet","Date","now","Promise","waitForEmbedData","resolve","reject","$8395381ed5e5a6ad$var$embedState","complete","bind","then","getElementById","innerHTML","arr","Uint8Array","pdf","pdfName","pdfFileName","modifiedPdfName","w","Worker","postMessage","mtype","bytes","citations","cites","citesFileName","onmessage","e","terminate","message","$8395381ed5e5a6ad$var$extractState","$8395381ed5e5a6ad$var$citesSelector","addEventListener","event","citesFileList","target","files","name","citesReader","FileReader","citesString","result","readAsText","$8395381ed5e5a6ad$var$embedSelector","embedList","embedName","embedReader","embedResult","readAsArrayBuffer","$8395381ed5e5a6ad$var$extractSelector","extractList","extractReader","extractResult","$8395381ed5e5a6ad$var$ensureExtractDataIsSet","waitForExtractData","fileName"],"version":3,"file":"index.349b739f.js.map"}